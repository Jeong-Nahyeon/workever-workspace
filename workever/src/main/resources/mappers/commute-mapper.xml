<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="commuteMapper">
	
	
	<resultMap id="commuteResult" type="Commute">
		<result column="cm_no" property="cmNo" />
		<result column="user_no" property="userNo" />
		<result column="cm_date" property="cmDate" />
		<result column="cm_state" property="cmState" />
		<result column="cm_start_time" property="cmStartTime" />
		<result column="cm_end_time" property="cmEndTime" />
		<result column="cm_working_hours" property="cmWorkingHours" />
		
		<result column="user_name" property="userName" />
		
		<result column="ot_working_hours" property="otWorkingHours" />
		<result column="total_working_hours" property="totalWorkingHours" />
	</resultMap>
	
	<resultMap id="ApprovalResult" type="Approval">
		<result column="apvl_no" property="apvlNo" />
		<result column="apvl_writer" property="apvlWriter" />
		<result column="apvl_form_no" property="apvlFormNo" />
		<result column="apvl_title" property="apvlTitle" />
		<result column="apvl_create_date" property="apvlCreateDate" />
		<result column="apvl_status" property="apvlStatus" />
		<result column="user_name" property="apvlWriterName" />
		<result column="user_rank" property="apvlWriterRank" />
		<result column="dept_name" property="apvlWriterDeptName" />
		
		<result column="off_start_date" property="offStartDate" />
		<result column="off_end_date" property="offEndDate" />
		<result column="dayoff" property="dayoff" />
		<result column="off_kind" property="offKind" />
		<result column="off_reason" property="offReason" />
		<result column="apvl_return_comment" property="apvlReturnComment" />
		
		<result column="ot_date" property="otDate" />
		<result column="ot_working_hours" property="otWorkingHours" />
		<result column="ot_title" property="otTitle" />
		<result column="ot_content" property="otContent" />
	</resultMap>
	
	<!-- *근태 관리* -->
	
	<!-- 출퇴근 관리(유저) -->
	
	<select id="cmSelectListCount" resultType="_int">
		select
			   count(*)
		  from commute
		 where user_no = #{ userNo }
	</select>
	
	<select id="cmSelectList" resultMap="commuteResult">
		select 
		       cm_no
		     , user_name
		     , cm_date
		     , cm_state
		     , cm_start_time
		     , cm_end_time
		     , cm_working_hours
		  from commute
		  join users using (user_no)
		 where user_no = #{ userNo }
		 order
		    by cm_no desc
	</select>
	
	<insert id="cmInsertEnter">
		insert
		  into commute
		     (
		       cm_no
		     , user_no
		     , cm_date
		     , cm_start_time
		     )
		     values
		     (
		       seq_commute.nextval
		     , #{ userNo }
		     , to_char(sysdate, 'yyyy-mm-dd')
		     , to_char(sysdate, 'hh24:mi:ss')
		     )
	</insert>
	
	<insert id="cmInertTardiness">
		insert
		  into commute
		     (
		       cm_no
		     , user_no
		     , cm_date
		     , cm_state
		     , cm_start_time
		     )
		     values
		     (
		       seq_commute.nextval
		     , #{ userNo }
		     , to_char(sysdate, 'yyyy-mm-dd')
		     , 2
		     , to_char(sysdate, 'hh24:mi:ss')
		     )
	</insert>
	
	<update id="cmUpdateLeave_gy">
		update commute
		   set cm_end_time = to_char(sysdate, 'hh24:mi:ss')
		     , cm_working_hours = TRUNC((to_date(cm_end_time, 'HH24:MI:SS')-to_date(cm_start_time, 'HH24:MI:SS'))*24 -1) || ':' ||
		                          TRUNC(mod((to_date(cm_end_time, 'HH24:MI:SS') - to_date(cm_start_time, 'HH24:MI:SS'))*24,1)*60)
		 where user_no = #{ userNo }
		   and cm_date = to_char(sysdate, 'yyyy-mm-dd')
	</update>
	
	<update id="cmUpdateLeave">
		update commute
		   set cm_end_time = to_char(sysdate, 'hh24:mi:ss')
		     , cm_working_hours = round((to_date(to_char(sysdate, 'hh24:mi:ss'), 'hh24:mi:ss') - to_date(cm_start_time, 'hh24:mi:ss')) * 24, 1) 
		     , cm_state = case 
		                    when cm_state = 2 then 2 
		                    when to_char(sysdate, 'hh24') <![CDATA[ < ]]> 18 then 4 
		                    else 1 
		                   end
		 where user_no = #{ userNo }
		   and cm_date = to_char(sysdate, 'yyyy-mm-dd')
	</update>
	
	
	<select id="cmSelectSearchCount" resultType="_int">
		select
		       count(*)
		  from commute
		 where user_no = #{ userNo }
		<if test='startday !="" and endday != ""'>
		   and cm_date between #{ startday } and #{ endday }
		</if>
		<if test='cm_status != ""'>
		   and cm_state = #{ cmStatus }
		</if>
	</select>
	
	
	<select id="cmSelectSearchList" resultMap="commuteResult">
		select 
		       cm_no
		     , cm_date
		     , cm_state
		     , cm_start_time
		     , cm_end_time
		     , cm_working_hours
		  from commute
		  join users using (user_no)
		 where user_no = #{ userNo }
	 	<if test='startday !="" and endday != ""'>
	   	   and cm_date between #{ startday } and #{ endday }
	  	</if>
	  	<if test='cm_status != ""'>
		   and cm_state = #{ cmStatus }
		</if>
		 order
		    by cm_no desc
	</select>
	
	
	<!-- 출퇴근 관리(관리자) -->
	
	<select id="adCmSelectCount" resultType="_int">
		select
		       count(*)
		  from commute
		  join users using (user_no)
		 where user_enabled = 'Y'
		   and user_rank != '관리자'
	</select>
	
	<select id="adCmSelectList" resultMap="commuteResult">
		select 
		       cm_no
		     , user_name
		     , cm_date
		     , cm_state
		     , cm_start_time
		     , cm_end_time
		     , cm_working_hours
		  from commute
		  join users using (user_no)
		 where user_enabled = 'Y'
		 order
		    by cm_no desc
	</select>
	
	<insert id="adInsertAbsence">
		insert
		  into commute
		     (
		       cm_no
		     , user_no
		     , cm_date
		     , cm_state
		     )
		     values
		     (
		       seq_commute.nextval
		     , #{ userNo }
		     , to_char(sysdate, 'yyyy-mm-dd')
		     , 3
		     )
	</insert>
	
	<select id="adCmSelectSearchCount" resultType="_int">
		select
		       count(*)
		  from commute
		  join users using (user_no)
		 where cm_state = #{ cmStatus }
		<if test='startday !="" and endday != ""'>
	   	   and cm_date between #{ startday } and #{ endday }
	  	</if>
	  	<if test="userName != ''">
		   and user_name = #{ userName }
		</if>
	</select>
	
	<select id="adCmSelectSearchList" resultMap="commuteResult">
		select 
		       cm_no
		     , cm_date
		     , user_name
		     , cm_state
		     , cm_start_time
		     , cm_end_time
		     , cm_working_hours
		  from commute
		  join users using (user_no)
		 where cm_state = #{ cmStatus }
	 	<if test='startday !="" and endday != ""'>
	   	   and cm_date between #{ startday } and #{ endday }
	  	</if>
	  	<if test="userName != ''">
		   and user_name = #{ userName }
		</if>
		 order
		    by cm_no desc
	</select>
	
	
	
	<!-- 근무 내역 (유저) -->
	
	<select id="whSelectListCount" resultType="_int">
		select count(*)
		  from (
		        select 
		               cm_no 
		             , user_no
		             , cm_date
		             , cm_working_hours
		             , (
		                select ot_working_hours
		                  from approval_overtime ao
		                  join approval a on (ao.apvl_no = a.apvl_no)
		                 where a.apvl_writer= 3
		                   and c.cm_date = ao.ot_date
		             ) ot_working_hours
		          from commute c
		         where user_no = #{ userNo }
		       )
	</select>
	
	<select id="whSelectList" resultMap="commuteResult">
		select cm_no
		     , user_no
		     , cm_date
		     , cm_working_hours
		     , nvl(ot_working_hours, 0) as "ot_working_hours"
		     , cm_working_hours + nvl(ot_working_hours, 0) as "total_working_hours"
		  from (
		        select 
		               cm_no 
		             , user_no
		             , cm_date
		             , cm_working_hours
		             , (
		                select ot_working_hours
		                  from approval_overtime ao
		                  join approval a on (ao.apvl_no = a.apvl_no)
		                 where a.apvl_writer= 3
		                   and c.cm_date = ao.ot_date
		               ) ot_working_hours
		          from commute c
		         where user_no = #{ userNo }
		         order
            		by cm_no desc
		  )
	</select>
	
	<select id="whSelectSearchCount" resultType="_int">
		select count(*)
		  from (
		        select 
		               cm_no 
		             , user_no
		             , cm_date
		             , cm_working_hours
		             , (
		                select ot_working_hours
		                  from approval_overtime ao
		                  join approval a on (ao.apvl_no = a.apvl_no)
		                 where a.apvl_writer= 3
		                   and c.cm_date = ao.ot_date
		             ) ot_working_hours
		          from commute c
		         where user_no = #{ userNo }
		           and cm_date between #{ startday } and #{ endday }
		       )
	</select>
	
	<select id="whSelectSearchList" resultMap="commuteResult">
		select cm_no
		     , user_no
		     , cm_date
		     , cm_working_hours
		     , nvl(ot_working_hours, 0) as "ot_working_hours"
		     , cm_working_hours + nvl(ot_working_hours, 0) as "total_working_hours"
		  from (
		        select 
		               cm_no 
		             , user_no
		             , cm_date
		             , cm_working_hours
		             , (
		                select ot_working_hours
		                  from approval_overtime ao
		                  join approval a on (ao.apvl_no = a.apvl_no)
		                 where a.apvl_writer= 3
		                   and c.cm_date = ao.ot_date
		               ) ot_working_hours
		          from commute c
		         where user_no = #{ userNo }
		           and cm_date between #{ startday } and #{ endday }
		         order
            		by cm_no asc
		  )
	</select>
	
	
	<!-- 휴가 관리 (유저) -->

	<select id="doSelectListCount" resultType="_int">
		select
		       count(*)
		  from approval
		  join users on user_no = apvl_writer
		 where apvl_form_no = 1
		   and user_no = #{ userNo }
	</select>
	
	<select id="doSelectList" resultMap="ApprovalResult">
		select
			   distinct apvl_no
		     , off_start_date || '~' || off_end_date as "dayoff"
		     , off_kind
		     , apvl_title
		     , off_reason
		     , apvl_status
             , apvl_return_comment
		  from approval 
		  join approval_dayoff using (apvl_no)
		  join users u on user_no = apvl_writer
          join approval_line using (apvl_no)
		 where u.user_no = #{ userNo }
		 order
   			by apvl_no desc
	</select>
	
	<select id="doSelectReason" resultMap="ApprovalResult">
		select
			   distinct apvl_no
		     , apvl_title
		     , off_reason
		  from approval 
		  join approval_dayoff using (apvl_no)
		 where apvl_no = #{ apvlNo }
	</select>
	
	<select id="doSelectReturn" resultMap="ApprovalResult">
		select
			   distinct apvl_no
		     , apvl_status
             , apvl_return_comment
		  from approval 
          join approval_line using (apvl_no)
		 where apvl_no = #{ apvlNo }
	</select>
	
	<select id="doSelectSearchCount" resultType="_int">
		select
			   count(*)
		  from (
		  		select
					   distinct apvl_no
				     , off_start_date || '~' || off_end_date as "dayoff"
				     , off_kind
				     , apvl_title
				     , off_reason
				     , apvl_status
		             , apvl_return_comment
				  from approval 
				  join approval_dayoff using (apvl_no)
				  join users u on user_no = apvl_writer
		          join approval_line using (apvl_no)
				 where u.user_no = #{ userNo }
				 <if test='startday !="" and endday != ""'>
		           and off_start_date between #{ startday } and #{ endday }
		           and off_end_date between #{ startday } and #{ endday }
		         </if>
		         <if test='offdayKind != null'>
		           and off_kind = #{ offdayKind }
		         </if>
		         <if test='keyword !=""'>
		           and off_reason like '%' || #{ keyword } || '%'
		         </if>
				 order
		   			by apvl_no desc
		       )
	</select>
	
	<select id="doSelectSearchList" resultMap="ApprovalResult">
		select
			   distinct apvl_no
		     , off_start_date || '~' || off_end_date as "dayoff"
		     , off_kind
		     , apvl_title
		     , off_reason
		     , apvl_status
             , apvl_return_comment
		  from approval 
		  join approval_dayoff using (apvl_no)
		  join users u on user_no = apvl_writer
          join approval_line using (apvl_no)
		 where u.user_no = #{ userNo }
		 <if test='startday !="" and endday != ""'>
           and off_start_date between #{ startday } and #{ endday }
           and off_end_date between #{ startday } and #{ endday }
         </if>
         <if test='offdayKind != null'>
           and off_kind = #{ offdayKind }
         </if>
         <if test='keyword !=""'>
           and off_reason like '%' || #{ keyword } || '%'
         </if>
		 order
   			by apvl_no desc
	</select>
	
	
	<!-- 휴가 관리 (관리자) -->
	
	<select id="adDoSelectListCount" resultType="_int">
		select
		       count(*)
		  from approval
		 where apvl_form_no = 1
	</select>
	
	<select id="adDoSelectList" resultMap="ApprovalResult">
		select
		       apvl_no
		     , off_start_date || '~' ||off_end_date as "dayoff"
		     , user_name
		     , off_kind
		     , apvl_status
		  from approval
		  join approval_dayoff using (apvl_no)
		  join users on user_no = apvl_writer
		 order
		    by apvl_no desc
	</select>
	
	
	<!-- 연장근무 관리 (유저) -->
	
	<select id="otSelectListCount" resultType="_int">
		select
		       count(*)
		  from approval
		  join users u on user_no = apvl_writer
		 where u.user_no = #{ userNo }
		   and apvl_form_no = 2
	</select>
	
	<select id="otSelectList" resultMap="ApprovalResult">
		select
		       apvl_no
		     , ot_date
		     , ot_working_hours
		     , ot_title
		     , ot_content
		     , apvl_status
		  from approval a
		  join approval_overtime using (apvl_no)
		  join users u on user_no = apvl_writer
		 where u.user_no = #{ userNo }
	</select>
	
	<select id="otSelectReason" resultMap="ApprovalResult">
		select
			   distinct apvl_no
		     , ot_title
		     , ot_content
		  from approval 
		  join approval_overtime using (apvl_no)
		 where apvl_no = #{ apvlNo }
	</select>
	
	<select id="otSelectReturn" resultMap="ApprovalResult">
		select
			   distinct apvl_no
		     , apvl_status
             , apvl_return_comment
		  from approval 
          join approval_line using (apvl_no)
		 where apvl_no = #{ apvlNo }
	</select>
	
	
	<!-- 연장근무 관리 (관리자) -->
	
	<select id="adOtSelectListCount" resultType="_int">
		select
		       count(*)
		  from approval
		 where apvl_form_no = 2
	</select>
	
	<select id="adOtSelectList" resultMap="ApprovalResult">
		select
		       apvl_no
		     , ot_date
             , user_name
		     , ot_working_hours
		     , apvl_status
		  from approval a
		  join approval_overtime using (apvl_no)
          join users on user_no = apvl_writer
         order
            by apvl_no desc
	</select>
</mapper>